#include <iostream>
#include <vector>
#include <set>

using namespace std;

int main(){
    int t;
    cin>>t;
    for(int i = 0; i < t; ++i){
        int n;
        cin>>n;
        int count = n;
        set<vector<long>> iset;
        vector<vector<long>> v1;//第一象限
        vector<vector<long>> v2;//第二象限
        vector<vector<long>> v3;//第三象限
        vector<vector<long>> v4;//第四象限
        for(int j = 0; j < n; ++j){
            long t1,t2;
            cin>>t1>>t2;
            if(t1 > 0 && t2 > 0){
                v1.push_back({t1,t2});
                iset.insert({t1,t2});
            }

            else if(t1 < 0 && t2 > 0){
                v2.push_back({t1,t2});
                iset.insert({t1,t2});
            }

            else if(t1 < 0 && t2 < 0){
                v3.push_back({t1,t2});
                iset.insert({t1,t2});
            }

            else if(t1 > 0 && t2 > 0){
                v4.push_back({t1,t2});
                iset.insert({t1,t2});
            }
        }
        for(auto it = v1.begin();it != v1.end(); it++){
            for(auto it1 = it+1;it1 != v1.end(); it1++){
                if((*it)[0] < (*it1)[0] && (*it)[1] > (*it1)[1] )
                    iset.insert({(*it)[0],(*it1)[1]});
                else if((*it)[0] > (*it1)[0] && (*it)[1] < (*it1)[1] )
                    iset.insert({(*it1)[0],(*it)[1]});
            }
        }
        for(auto it = v2.begin();it != v2.end(); it++){
            for(auto it1 = it+1;it1 != v2.end(); it1++){
                if((*it)[0] < (*it1)[0] && (*it)[1] > (*it1)[1] )
                    iset.insert({(*it)[0],(*it1)[1]});
                else if((*it)[0] > (*it1)[0] && (*it)[1] < (*it1)[1] )
                    iset.insert({(*it1)[0],(*it)[1]});
            }
        }
        for(auto it = v3.begin();it != v3.end(); it++){
            for(auto it1 = it+1;it1 != v3.end(); it1++){
                if((*it)[0] < (*it1)[0] && (*it)[1] > (*it1)[1] )
                    iset.insert({(*it)[0],(*it1)[1]});
                else if((*it)[0] > (*it1)[0] && (*it)[1] < (*it1)[1] )
                    iset.insert({(*it1)[0],(*it)[1]});
            }
        }
        for(auto it = v4.begin();it != v4.end(); it++){
            for(auto it1 = it+1;it1 != v4.end(); it1++){
                if((*it)[0] < (*it1)[0] && (*it)[1] > (*it1)[1] )
                    iset.insert({(*it)[0],(*it1)[1]});
                else if((*it)[0] > (*it1)[0] && (*it)[1] < (*it1)[1] )
                    iset.insert({(*it1)[0],(*it)[1]});
            }
        }
        cout<<iset.size()<<endl;
    }

    return 0;
}