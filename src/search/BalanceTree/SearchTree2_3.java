package search.BalanceTree;


/*
* 2-3 查找树的特点：
*                   1、有两种节点，传统的节点是2-节点，一个键值和两个孩子
*                   现在有一种3-节点，两个键值和三个孩子
*                   2、不过键值和二叉查找树一样，是排序的。
*                   即每个节点大于左子树的所有节点，小于右子树的所有节点
*
*                   3、2-3 树在插入元素之后仍能保持平衡
*
* 向一个3-节点插入元素的时候：
*                   若该节点之前只有一个键，那么把新元素也放进去即可
*                   若该节点已经有两个键值了，那么就先把新元素放进去，形成4-节点，
*                   然后将4-节点按2-节点的规则，分解为一个小树
* 如果该3-节点的父节点是一个2-节点，那么在将4-节点分解之后，
*                           还需要将小树的根节点存入2-节点中，形成3-节点
*  反正就是中键会不断向上面插入
* */
public class SearchTree2_3 {

}
